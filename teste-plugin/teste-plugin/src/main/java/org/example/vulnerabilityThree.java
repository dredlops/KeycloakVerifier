package org.example;

import org.json.JSONArray;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.util.Iterator;

public class vulnerabilityThree {

    Response resp;
    Token tok;
    private static final String URL_VU = "http://localhost:8080/admin/realms/master";
    public void vulnerabilityThree() throws IOException {
        tok=new Token();
        resp=new Response();
        String token = tok.getToken();
        URL url = new URL(URL_VU);
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("GET");
        conn.setRequestProperty("Authorization", "Bearer " + token);

        boolean val = validate(resp.getResponse(conn));
        //System.out.println("response: "+ response);
        if (!val){ System.out.println("Esta versão poderá ter problemas");}
        else
            System.out.println("Versão segura");

    }


    private boolean validate(String response){
        JSONObject resp = new JSONObject(response);
        if(resp.get("registrationEmailAsUsername").equals(false) || resp.get("loginWithEmailAllowed").equals(true))
            return false;
        return true;
    }


    /*private String getResponse(HttpURLConnection conn) {
        BufferedReader in;
        String output;

        try {
            in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
        } catch (IOException e) {
            throw new RuntimeException(e);
        }

        StringBuffer response = new StringBuffer();

        while (true) {
            try {
                if ((output = in.readLine()) == null) break;
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
            response.append(output);
        }

        try {
            in.close();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return response.toString();
    }*/



}

